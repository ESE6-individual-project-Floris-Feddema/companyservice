name: Go

on:
  push:
    branches: [develop]

jobs:
  build:
    name: Build
    runs-on: ubuntu-18.04
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go 1.14
        uses: actions/setup-go@v1
        with:
          go-version: 1.14
        id: go

      - name: Get configuration
        run: gpg --quiet --batch --yes --passphrase="${{ secrets.GPG_PASSPHRASE }}" --output config.env --decrypt config.env.gpg

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Build
        run: go build -v .

      - name: Test
        run: go test -v .

      - name: Upload kubernetes artifact
        uses: actions/upload-artifact@v1
        with:
          name: kubernetes-artifact
          path: ./kube_development
  deliver:
    needs: build
    runs-on: ubuntu-18.04
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get configuration
        run: gpg --quiet --batch --yes --passphrase="${{ secrets.GPG_PASSPHRASE }}" --output config.env --decrypt config.env.gpg

      # Deliver Docker image to Github packages
      - name: Deliver Docker image
        env:
          CONTAINER_IMAGE: docker.pkg.github.com/ese6-individual-project-floris-feddema/companyservice/companyservice:${{ github.sha }}
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}"| docker login docker.pkg.github.com -u ${{ secrets.DOCKER_GITHUB_USERNAME }} --password-stdin
          docker build -t $CONTAINER_IMAGE .
          docker push $CONTAINER_IMAGE

  deploy:
    needs: deliver
    runs-on: ubuntu-18.04
    steps:
      - name: Download kubernetes artifact
        uses: actions/download-artifact@v1
        with:
          name: kubernetes-artifact
          path: ./kube_development

      - uses: Azure/setup-kubectl@v1

      - uses: Azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - uses: Azure/k8s-create-secret@v1
        with:
          namespace: plandar-development
          container-registry-url: docker.pkg.github.com
          container-registry-username: ${{ secrets.DOCKER_GITHUB_USERNAME }}
          container-registry-password: ${{ secrets.DOCKER_PASSWORD }}
          secret-name: github-docker-registry

      - uses: Azure/k8s-deploy@v1
        with:
          namespace: plandar-development
          manifests: |
            ./kube_development/kube_certificate.yaml
            ./kube_development/kube_deployment.yaml
            ./kube_development/kube_ingress.yaml
            ./kube_development/kube_service.yaml
          images: |
            docker.pkg.github.com/ese6-individual-project-floris-feddema/companyservice/companyservice:${{ github.sha }}
          imagepullsecrets:
            github-docker-registry